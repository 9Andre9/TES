# This file is a template, and might need editing before it works on your project.
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages
stages:
    - dependencies
    - test
    - build
    - deploy

install_dependencies:
    variables:
        npm_config_cache: "$CI_PROJECT_DIR/.npm"
    image: node:16-alpine
    stage: dependencies
    tags: ['matpay']
    only:
        - main
    script:
        - npm ci --prefer-offline
    cache:
        key:
            files:
                - package-lock.json
        paths:
            - node_modules
            - .npm
install_dependencies_with_cypress:
    variables:
        npm_config_cache: "$CI_PROJECT_DIR/.npm"
        CYPRESS_CACHE_FOLDER: "$CI_PROJECT_DIR/cache/Cypress"
    image: node:16-alpine
    stage: dependencies
    tags: ['matpay']
    only:
        - testing
    script:
        - npm ci --prefer-offline
    cache:
        key:
            files:
                - package-lock.json
        paths:
            - node_modules
            - .npm
            - cache/Cypress
test-unit:
    image: node:16-alpine
    stage: test
    tags: ['matpay']
    only:
        - main
        - testing
    script:
        - npm install -g @vue/cli
        - npm run test:unit
    artifacts:
        paths:
            - jest-coverage/
    cache:
        key:
            files:
                - package-lock.json
        paths:
            - node_modules
            - .npm
        policy: pull

test-e2e:
    image: cypress/browsers:node16.13.0-chrome95-ff94
    stage: test
    tags: [ 'matpay' ]
    only:
        - main
        - testing
    script:
        - npm install -g @vue/cli
        - npm run serve &
        - npm run test:e2e
    artifacts:
        paths:
            - cypress-coverage/
    cache:
        key:
            files:
                - package-lock.json
        paths:
            - node_modules
            - .npm
            - cache/Cypress
        policy: pull

lint:
    image: node:16-alpine
    stage: test
    tags: ['matpay']
    only:
        - main
        - testing
    script:
        - npm install -g @vue/cli
        - npm run lint
    cache:
        key:
            files:
                - package-lock.json
        paths:
            - node_modules
            - .npm
        policy: pull

build-frontend:
    stage: build
    image: node:16-alpine
    tags: ['matpay']
    only:
        - main
    script:
        - npm install -g @vue/cli
        - npm run build
    artifacts:
        paths:
            - $CI_PROJECT_DIR/dist
    cache:
        key:
            files:
                - package-lock.json
                - .npm
        paths:
            - node_modules
        policy: pull


deploy-job:
    stage: deploy
    image: alpine
    tags: ['matpay']
    only:
        - main
    before_script:
        - apk add openssh-client
        - eval $(ssh-agent -s)
        - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
        - mkdir -p ~/.ssh
        - chmod 700 ~/.ssh
    script:
        - scp -o StrictHostKeyChecking=no -r dist/* uploader@tes.dsn.kastel.kit.edu:/srv/www/matpay/
